@model _5shop.Models.ProductsCategoriesAnimalsViewModel

@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col-3 d-flex flex-column">
        <h2>Сите производи</h2>
        <div class="mt-auto">
            @if (User.IsInRole(_5shop.Models.Role.ADMIN.ToString()))
            {
                <button class="btn btn-outline-dark">
                    @Html.ActionLink("Додади нов производ", "Create")
                </button>
            }
        </div>
    </div>

    <div class="col-3 d-flex flex-column">
        <div class="mt-auto">
            @Html.DropDownListFor(model => model.products.First().category, new SelectList(Model.categories), "-- Select Category --", new { @class = "form-control", id = "categoryFilter" })
        </div>
    </div>

    <div class="col-3 d-flex flex-column">
        <div class="mt-auto">
            @Html.DropDownListFor(model => model.products.First().animal, new SelectList(Model.animals), "-- Select Animal --", new { @class = "form-control", id = "animalFilter" })
        </div>
    </div>

    <div class="col-3 d-flex flex-column">
        <button class="btn mt-auto" style="color:white" id="filterButton" onclick="filterProducts()">Филтрирај</button>
    </div>
</div>
<br />
<br />

<table class="table">
    <thead>
    <th>
        @Html.DisplayNameFor(model => model.products.First().imageUrl)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.products.First().name)
    </th>
    @*<th>
            @Html.DisplayNameFor(model => model.products.First().quantity)
        </th>*@
    <th>
        @Html.DisplayNameFor(model => model.products.First().price)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.products.First().category)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.products.First().animal)
    </th>
    <th></th>
    </thead>
    <tbody>
        @foreach (var item in Model.products)
        {
            <tr>
                <td>
                    <img src="@item.imageUrl" style="max-width:100px" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.animal)
                </td>
                <td>
                    @Html.ActionLink("Детали", "Details", new { id = item.id })

                    @if (User.IsInRole(_5shop.Models.Role.ADMIN.ToString()))
                    {
                        @Html.Label("|")
                        @Html.ActionLink("Промени", "Edit", new { id = item.id })
                        @Html.Label("|")
                        @Html.ActionLink("Избриши", "Delete", new { id = item.id })
                    }

                    @if (User.IsInRole(_5shop.Models.Role.USER.ToString()))
                    {
                        @*@Html.Label("|")*@
                    <!--<div class="quantity-container">
                        <a class="quantity-button rounded-pill" onclick="addToCart(item.id)">Додади во кошничка</a>
                        //Html.ActionLink("Додади во кошничка", "addToCart", "ShoppingCarts", new { cartId = User.Cart.id, productId = item.id}, new {onclick = "addToCart(this);" })
                        <button class="quantity-button rounded-pill" onclick="decrementQuantity(this)">-</button>
                        <input type="text" class="quantity-input rounded-pill" value="1" min="1" />
                        <button class="quantity-button  rounded-pill" onclick="incrementQuantity(this)">+</button>
                    </div>-->
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        function filterProducts() {
            var categoryFilter = $("#categoryFilter").val();
            var animalFilter = $("#animalFilter").val();
            window.location.href = "/Products/Index?categoryFilter=" + categoryFilter + "&animalFilter=" + animalFilter;
        }

        $("#filterButton").on("click", filterProducts);
    });

    //function decrementQuantity(button) {
    //    var input = $(button).siblings('.quantity-input');
    //    var value = parseInt(input.val(), 10);

    //    if (value > 1) {
    //        input.val(value - 1);
    //    }
    //}

    //function incrementQuantity(button) {
    //    var input = $(button).siblings('.quantity-input');
    //    var value = parseInt(input.val(), 10);

    //    input.val(value + 1);
    //}

    //function addToCart(link) {
    //    var quantity = $(link).siblings('.quantity-container').find('.quantity-input').val();
    //    var productId = $(link).data('id'); // Assuming you set data-id on the link

    //    // Get cartId from the data attribute
    //    var cartId = $(link).closest('.quantity-container').data('cart-id');

    //    // Send an AJAX request to the server to add the product to the cart
    //    $.ajax({
    //        url: "/ShoppingCarts/addToCart",
    //        method: "POST",
    //        data: { cartId: cartId, productId: productId, quantity: quantity }
    //    });
    //}

</script>
